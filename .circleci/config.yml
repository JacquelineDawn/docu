version: 2.1
orbs:
  rust: circleci/rust@1.6.0

commands:
  setup-sccache:
    steps:
      - run:
          name: Install sccache
          command: |
            cargo install sccache
            # This configures Rust to use sccache.
            echo 'export "RUSTC_WRAPPER"="sccache"' >> $BASH_ENV
            # This is the maximum space sccache cache will use on disk.
            echo 'export "SCCACHE_CACHE_SIZE"="1G"' >> $BASH_ENV
            sccache --version
  restore-sccache-cache:
    steps:
      - restore_cache:
          name: Restore sccache cache
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
  save-sccache-cache:
    steps:
      - save_cache:
          name: Save sccache cache
          # We use {{ epoch }} to always upload a fresh cache:
          # Of course, restore_cache will not find this exact key,
          # but it will fall back to the closest key (aka the most recent).
          # See https://discuss.circleci.com/t/add-mechanism-to-update-existing-cache-key/9014/13
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"

jobs:
  build:
    docker:
      - image: cimg/rust:1.61.0

    steps:
      - checkout
      - run: cargo --version

      - setup-sccache
      - restore-sccache-cache
      - run: 
          name: install cargo & mdbooks
          command: | 
            cargo install cargo-update
            cargo install mdbook
            pwd && mdbook build
      - save-sccache-cache
      - persist_to_workspace:
          root: docs/books
          paths:
            - book/


  deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: docs/_build
      - run:
          name: deploy pages
          command: npm install -g --silent gh-pages@2.0.1
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dist book/

      


workflows: 
  build: 
    jobs: 
      - build
      - deploy:
          requires:
            - build
      

          



            
